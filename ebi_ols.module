<?php
const EBI_OLS_ENDPOINT = 'https://www.ebi.ac.uk/ols/api';

function ebi_ols_permission() {
  return array(
    'access obsolete report' => array(
      'title' => t('Access obsolete report'),
      'description' => t('Access report page of obsolete terms.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function ebi_ols_menu() {
  $items['admin/config/services/ebi_ols'] = array(
    'title' => 'EBI Ontology Lookup Service',
    'description' => 'Content with obsolete terms. ',
    'page callback' => 'ebi_ols_report',
    'page arguments' => array('transliteration_retroactive'),
    'access arguments' => array('access obsolete report'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

function ebi_ols_report() {
  $rows = array();
  $fields = array();
  $header = array('Content', 'Obsolete terms');
  $field_info = field_info_fields();
  foreach($field_info as $field) {
    foreach($field['bundles'] as $entity_type => $bundles){
      foreach($bundles as $bundle){
        $field_setting = field_info_instance($entity_type, $field['field_name'], $bundle);
        if ($field_setting['widget']['module'] == 'ebi_ols') {
          $storage = $field['storage']['details']['sql']['FIELD_LOAD_CURRENT'];
          foreach($storage as $table=>$column) {
            $fields[] = array(
              'db_table' => $table,
              'db_col' => $column['value'],
              'ontology' => $field_setting['widget']['settings']['ontology'],
            );
          }
        }
      }
    }
  }
  foreach (array_unique($fields, SORT_REGULAR) as $check) {
    $request = drupal_http_request(constant('OLS_URL') . '/search?rows=10000&obsoletes=true&q=*&ontology=' . $check['ontology'] . '&type=class');
    if (json_decode($request->data)) {
      $terms = array();
      $data = json_decode($request->data);
      foreach ($data->response->docs as $index => $doc) {
        $term[] = $check['ontology'] . ':' . $doc->iri;
      }
      $result = db_select($check['db_table'], 'f')
        ->fields('f')
        ->condition($check['db_col'], $term, 'IN')
        ->execute();
      while ($record = $result->fetchAssoc()) {
        $entity = l($record['entity_type'] . ' ' . $record['entity_id'], $record['entity_type'] . '/' . $record['entity_id']);
        $row = array($entity, $record[$check['db_col']]);
        $rows[] = $row;
      }
    }
    else {
      drupal_set_message(t('EBI Ontology Lookup Service is not available. Please check https://www.ebi.ac.uk/ols/api.'), $type = 'error');
    }
  }
  return theme('table', array('header' => $header, 'rows' => $rows));
}

/**
 * Implements hook_theme().
 */
/*
function ebi_ols_theme($existing, $type, $theme, $path) {
  $theme = [];
  $theme['ebi_ols_formatter_default'] = [
    'variables' => [
      'item' => NULL,
    ],
  ];
  return $theme;
}
*/
